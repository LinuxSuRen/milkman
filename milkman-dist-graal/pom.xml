<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>milkman-parent</artifactId>
        <groupId>com.github.warmuuh</groupId>
        <version>4.3.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>milkman-dist-graal</artifactId>


    <dependencies>
        <dependency>
            <groupId>com.github.warmuuh</groupId>
            <artifactId>milkman</artifactId>
            <version>4.3.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.github.warmuuh</groupId>
            <artifactId>milkman-rest</artifactId>
            <version>4.3.0-SNAPSHOT</version>
        </dependency>
    </dependencies>


    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.gluonhq</groupId>
                        <artifactId>client-maven-plugin</artifactId>
                        <version>0.1.16</version>
                        <configuration>
                            <!-- Uncomment to run on iOS: -->
                            <!-- <target>ios</target>-->

                            <mainClass>milkman.MilkmanApplication</mainClass>
                            <resourcesList>
                                <list>.*\\.txt$</list> <!-- headers.txt from rest plugin -->
                            </resourcesList>
                            <reflectionList>
                                <list>milkman.MilkmanPreloader</list>

                                <!-- see https://github.com/h2database/h2database/blob/version-1.4.196/h2/src/main/org/h2/store/fs/FilePath.java#L71 -->
                                <list>org.h2.store.fs.FilePathDisk</list>

                                <!-- javafx missing classes -->
                                <list>javafx.scene.control.TableColumnBase</list>
                                <list>javafx.css.converter.SizeConverter$SequenceConverter</list> <!-- loaded by JavaFXCompatibility  -->
                                <list>javafx.scene.text.Text</list><!-- specific method loaded by JavaFXCompatibility  -->
                                <list>com.sun.javafx.text.PrismTextLayout</list>
                                <list>javafx.scene.control.skin.TextFieldSkin</list>
                                <list>javafx.scene.control.skin.TableSkinUtils</list>
                                <list>javafx.scene.input.Clipboard</list>


                                <!-- for enabling %i pattern in logback config, see ch.qos.logback.core.rolling.helper.FileNamePattern::42-->
                                <list>ch.qos.logback.core.rolling.helper.IntegerTokenConverter</list>
                                <list>ch.qos.logback.classic.pattern.LineSeparatorConverter</list>
                                <list>ch.qos.logback.classic.pattern.MessageConverter</list>
                                <list>ch.qos.logback.classic.pattern.LineOfCallerConverter</list>
                                <list>ch.qos.logback.classic.pattern.FileOfCallerConverter</list>
                                <list>ch.qos.logback.classic.pattern.LoggerConverter</list>
                                <list>ch.qos.logback.classic.pattern.ThreadConverter</list>
                                <list>ch.qos.logback.classic.pattern.LevelConverter</list>
                                <list>ch.qos.logback.classic.pattern.DateConverter</list>
                                <list>ch.qos.logback.core.rolling.helper.DateTokenConverter</list>

                                <!-- domain model as this is stored to db via reflection (jackson) -->
                                <list>milkman.update.GithubReleaseChecker$ReleaseResponse</list>
                                <list>milkman.persistence.WorkbenchState</list>
                                <list>milkman.domain.Collection</list>
                                <list>milkman.domain.Dirtyable</list>
                                <list>milkman.domain.Environment</list>
                                <list>milkman.domain.Folder</list>
                                <list>milkman.domain.RequestAspect</list>
                                <list>milkman.domain.RequestAspect$CustomUnknownDeserializer</list>
                                <list>milkman.domain.RequestContainer</list>
                                <list>milkman.domain.RequestContainer$CustomUnknownDeserializer</list>
                                <list>milkman.domain.RequestExecutionContext</list>
                                <list>milkman.domain.ResponseContainer</list>
                                <list>milkman.domain.SyncDetails</list>
                                <list>milkman.ui.main.sync.NoSyncDetails</list>
                                <list>milkman.domain.Workspace</list>
                                <list>milkman.persistence.OptionEntry</list>
                                <list>milkman.ui.plugin.OptionsObject$CustomUnknownDeserializer</list>

                                <list>milkman.ui.main.options.CoreApplicationOptionsProvider$CoreApplicationOptions</list>

                                <list>milkman.ui.plugin.rest.HttpOptionsPluginProvider$HttpOptions</list>
                                <list>milkman.ui.plugin.rest.domain.HeaderEntry</list>
                                <list>milkman.ui.plugin.rest.domain.QueryParamEntry</list>
                                <list>milkman.ui.plugin.rest.domain.RestBodyAspect</list>
                                <list>milkman.ui.plugin.rest.domain.RestHeaderAspect</list>
                                <list>milkman.ui.plugin.rest.domain.RestQueryParamAspect</list>
                                <list>milkman.ui.plugin.rest.domain.RestRequestAspect</list>
                                <list>milkman.ui.plugin.rest.domain.RestRequestContainer</list>
                                <list>milkman.ui.plugin.rest.domain.RestResponseBodyAspect</list>
                                <list>milkman.ui.plugin.rest.domain.RestResponseContainer</list>
                                <list>milkman.ui.plugin.rest.domain.RestResponseHeaderAspect</list>


                            </reflectionList>

                            <nativeImageArgs>
                                <nativeImageArg>--allow-incomplete-classpath</nativeImageArg>
                                <nativeImageArg>-H:DynamicProxyConfigurationFiles=${project.basedir}/src/main/native-image/dynamicProxies.json</nativeImageArg>
                                <nativeImageArg>--initialize-at-build-time=org.fxmisc.richtext.TextFlowExt$TextLayout</nativeImageArg>
                                <nativeImageArg>--initialize-at-build-time=org.fxmisc.richtext.TextFlowExt$TextLine</nativeImageArg>
                            </nativeImageArgs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>compile-native</id>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>link-native</id>
                                <goals>
                                    <goal>link</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>package-native</id>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>

            </build>

        </profile>

    </profiles>

    <pluginRepositories>
        <pluginRepository>
            <id>gluon-releases</id>
            <url>https://nexus.gluonhq.com/nexus/content/repositories/releases/</url>
        </pluginRepository>
    </pluginRepositories>

</project>